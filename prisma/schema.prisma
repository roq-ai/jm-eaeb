generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model company {
  id          String      @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  description String?     @db.VarChar(255)
  image       String?     @db.VarChar(255)
  name        String      @db.VarChar(255)
  created_at  DateTime    @default(now()) @db.Timestamp(6)
  updated_at  DateTime    @default(now()) @db.Timestamp(6)
  user_id     String      @db.Uuid
  tenant_id   String      @db.VarChar(255)
  user        user        @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  inventory   inventory[]
}

model customer {
  id         String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id    String   @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  user       user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  rental     rental[]
}

model inventory {
  id         String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  tool_name  String   @db.VarChar(255)
  status     String   @db.VarChar(255)
  company_id String   @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  company    company  @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  rental     rental[]
}

model rental {
  id           String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  customer_id  String    @db.Uuid
  inventory_id String    @db.Uuid
  rental_date  DateTime  @db.Date
  return_date  DateTime? @db.Date
  created_at   DateTime  @default(now()) @db.Timestamp(6)
  updated_at   DateTime  @default(now()) @db.Timestamp(6)
  customer     customer  @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  inventory    inventory @relation(fields: [inventory_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String     @unique @db.VarChar(255)
  firstName   String?    @db.VarChar(255)
  lastName    String?    @db.VarChar(255)
  roq_user_id String     @db.VarChar(255)
  tenant_id   String     @db.VarChar(255)
  created_at  DateTime   @default(now()) @db.Timestamp(6)
  updated_at  DateTime   @default(now()) @db.Timestamp(6)
  company     company[]
  customer    customer[]
}
